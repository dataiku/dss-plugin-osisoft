{
    "meta" : {
        "label": "Event Frames search",
        "description": "Browse PI event frames",
        "icon": "icon-pi-system icon-cogs"
    },
    "readable": true,
    "writable": true,
    "kind": "PYTHON",
    "paramsPythonSetup": "browse_event_frames.py",
    "params": [
        {
            "name": "credentials",
            "label": "User preset",
            "type": "PRESET",
            "parameterSetId": "basic-auth"
        },
        {
            "name": "show_advanced_parameters",
            "label": " ",
            "type": "BOOLEAN",
            "description": "Show advanced parameters",
            "defaultValue": false
        },
        {
            "name": "server_url",
            "label": "Server URL",
            "visibilityCondition": "model.show_advanced_parameters==true",
            "type": "STRING",
            "description": "https://my_server:8082",
            "defaultValue": ""
        },
        {
            "name": "is_ssl_check_disabled",
            "label": " ",
            "visibilityCondition": "model.show_advanced_parameters==true",
            "type": "BOOLEAN",
            "description": "Disable SSL check",
            "defaultValue": false
        },
        {
            "name": "ssl_cert_path",
            "label": "Path to SSL certificate",
            "type": "STRING",
            "description": "(optional)",
            "visibilityCondition": "model.show_advanced_parameters==true && model.is_ssl_check_disabled==false",
            "mandatory": false
        },
        {
            "name": "is_debug_mode",
            "label": " ",
            "visibilityCondition": "model.show_advanced_parameters==true",
            "type": "BOOLEAN",
            "description": "Verbose logging",
            "defaultValue": false
        },
        {
            "name": "use_batch_mode",
            "label": " ",
            "type": "BOOLEAN",
            "description": "Use batch mode",
            "visibilityCondition": "model.show_advanced_parameters==true && model.must_retrieve_metrics==true",
            "defaultValue": false
        },
        {
            "name": "batch_size",
            "label": " ",
            "type": "INT",
            "description": "Batch size",
            "visibilityCondition": "model.show_advanced_parameters==true && model.use_batch_mode==true && model.must_retrieve_metrics==true",
            "minI": 1,
            "defaultValue": 500
        },
        {
            "name": "server_name",
            "label": "Server name",
            "type": "SELECT",
            "description": "",
            "getChoicesFromPython": true
        },
        {
            "name": "database_name",
            "label": "Database name",
            "type": "SELECT",
            "description": "",
            "visibilityCondition": "model.server_name.length>=0",
            "getChoicesFromPython": true
        },
        {
            "type": "SEPARATOR",
            "label": " ",
            "description": "Date / time can either be ISO 8601 or OSIsoft Time String format (see documentation)",
            "visibilityCondition": "model.database_name.length>0"
        },
        {
            "name": "search_mode",
            "label": "Search",
            "type": "SELECT",
            "selectChoices": [
                { "value": "Overlapped", "label": "Active Between"},
                { "value": "EndInclusive", "label": "Ending Between"},
                { "value": "StartInclusive", "label": "Starting Between"},
                { "value": "InProgress", "label": "Starting Between and In Progress"},
                { "value": "Inclusive", "label": "Entirely Between"},
                { "value": "ForwardFromEndTime", "label": "Ending After"},
                { "value": "BackwardFromEndTime", "label": "Ending Before"},
                { "value": "ForwardFromStartTime", "label": "Starting After"},
                { "value": "ForwardInProgress", "label": "Starting After and In Progress"},
                { "value": "BackwardFromStartTime", "label": "Starting Before"},
                { "value": "BackwardInProgress", "label": "Starting Before and In Progress"}
            ],
            "defaultValue": "Overlapped",
            "visibilityCondition": "model.database_name.length>0"
        },
        {
            "name": "start_time",
            "label": " ",
            "visibilityCondition": "model.database_name.length>0",
            "description": "Start time",
            "type": "STRING",
            "defaultValue": ""
        },
        {
            "name": "end_time",
            "label": " ",
            "visibilityCondition": "model.database_name.length>0 && ['Overlapped', 'EndInclusive', 'StartInclusive', 'InProgress', 'Inclusive'].indexOf(model.search_mode) >= 0",
            "description": "End time",
            "type": "STRING",
            "defaultValue": ""
        },
        {
            "name": "name_filter",
            "label": "Name",
            "visibilityCondition": "model.database_name.length>0",
            "description": "Optional",
            "type": "STRING",
            "defaultValue": ""
        },
        {
            "name": "referenced_element_name_filter",
            "label": "Element name",
            "visibilityCondition": "model.database_name.length>0",
            "description": "Optional",
            "type": "STRING",
            "defaultValue": ""
        },
        {
            "name": "severity_levels",
            "label": "Severity",
            "type": "MULTISELECT",
            "description": "",
            "selectChoices": [
                { "value": "None", "label": "None"},
                { "value": "Information", "label": "Information"},
                { "value": "Warning", "label": "Warning"},
                { "value": "Minor", "label": "Minor"},
                { "value": "Major", "label": "Major"},
                { "value": "Critical", "label": "Critical"}
            ],
            "visibilityCondition": "model.database_name.length>=0"
        },
        {
            "name": "template_name",
            "label": "Template",
            "type": "SELECT",
            "description": "",
            "visibilityCondition": "model.database_name.length>=0",
            "getChoicesFromPython": true
        },
        {
            "name": "must_retrieve_metrics",
            "type": "BOOLEAN",
            "label": " ",
            "defaultValue": false,
            "visibilityCondition": "model.database_name.length>=0",
            "description": "Retrieve values"
        },
        {
            "name": "search_full_hierarchy",
            "label": " ",
            "description": "Search full hierarchy",
            "visibilityCondition": "((model.must_retrieve_metrics) &&(model.database_name.length>=0))",
            "type": "BOOLEAN"
        },
        {
            "name": "data_type",
            "label": "Data type",
            "type": "SELECT",
            "description": "",
            "defaultValue": null,
            "visibilityCondition": "((model.must_retrieve_metrics) &&(model.database_name.length>=0))",
            "selectChoices": [
                { "value": "None", "label": "None"},
                { "value": "InterpolatedData", "label": "Interpolated"},
                { "value": "RecordedData", "label": "Recorded"},
                { "value": "PlotData", "label": "Plot"},
                { "value": "SummaryData", "label": "Summary"},
                { "value": "Value", "label": "Value"},
                { "value": "EndValue", "label": "End value"}
            ],
            "mandatory": true
        },
        {
            "name": "max_count",
            "label": "Max count",
            "visibilityCondition": "model.must_retrieve_metrics && ['RecordedData'].includes(model.data_type)",
            "description": "",
            "type": "INT",
            "defaultValue": 1000
        },
        {
            "name": "event_frame_to_retrieve",
            "label": "Event frame to retrieve",
            "type": "MULTISELECT",
            "description": "",
            "visibilityCondition": "((model.must_retrieve_metrics) &&(model.database_name.length>=0))",
            "getChoicesFromPython": true
        }
    ]
}
